<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="CountPosition" Id="{66a3fea9-06ea-4e58-ba00-8e91517712ea}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM CountPosition
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF IO.StepRotatonSwitch = 1 AND IO.Initialized THEN
		IO.LEDGreen := 0;
		IF IO.MotorRotationDirection = 0 THEN
			IF IO.MotorRotation = 1 OR NOT IO.Switch AND Automatic.RotationPositionCurrent < 190 THEN
				Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent + 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.RotationPositionAuto := Automatic.RotationPositionAuto + 1;
			//END_IF
		ELSE
			IF IO.MotorRotation = 1 OR NOT IO.Switch AND NOT IO.EndRotationSensor THEN
				Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent - 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.RotationPositionAuto := Automatic.RotationPositionAuto - 1;
			//END_IF
		END_IF
	ELSE
		IO.LEDGreen := 1;
	END_IF
	
	IF IO.StepExtensionSwitch = 1 AND IO.Initialized THEN
		IO.LEDGreen := 0;
		IF IO.MotorExtensionDirection = 0 THEN
			IF IO.MotorExtension OR NOT IO.Switch AND Automatic.ExtensionPositionCurrent < 388 THEN
				Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent + 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.ExtensionPositionAuto := Automatic.ExtensionPositionAuto + 1;
			//END_IF
		ELSE
			IF IO.MotorExtension OR NOT IO.Switch AND NOT IO.EndExtensionSensor THEN
				Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent - 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.ExtensionPositionAuto := Automatic.ExtensionPositionAuto - 1;
			//END_IF
		END_IF
	ELSE
		IO.LEDGreen := 1;
	END_IF
	
	IF IO.StepLiftingSwitch = 1 AND IO.Initialized THEN
		IO.LEDGreen := 0;
		IF IO.MotorLiftingDirection = 0 THEN
			IF IO.MotorLifting OR NOT IO.Switch THEN
				Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent + 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.LiftingPositionAuto := Automatic.LiftingPositionAuto + 1;
			//END_IF
		ELSE
			IF IO.MotorLifting OR NOT IO.Switch AND NOT IO.EndLiftingSensor THEN
				Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent - 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.LiftingPositionAuto := Automatic.LiftingPositionAuto - 1;
			//END_IF
		END_IF
	ELSE
		IO.LEDGreen := 1;
	END_IF
	IF IO.StepGripSwitch = 1 AND IO.Initialized THEN	// inverted
		IO.LEDGreen := 0;
		IF IO.MotorGripDirection = 0 THEN
			IF IO.MotorGrip OR NOT IO.Switch AND Automatic.GripPositionCurrent < 80 THEN
				Automatic.GripPositionCurrent := Automatic.GripPositionCurrent + 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.GripPositionAuto := Automatic.GripPositionAuto + 1;
			//END_IF
		ELSE
			IF IO.MotorGrip OR NOT IO.Switch AND NOT IO.EndGripSensor THEN
				Automatic.GripPositionCurrent := Automatic.GripPositionCurrent - 1;
			END_IF
			//IF NOT IO.Switch THEN
			//	Automatic.GripPositionAuto := Automatic.GripPositionAuto - 1;
			//END_IF
		END_IF
	ELSE
		IO.LEDGreen := 1;
	END_IF
	]]></ST>
    </Implementation>
    <LineIds Name="CountPosition">
      <LineId Id="12" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="16" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="21" Count="5" />
      <LineId Id="5" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="68" Count="18" />
      <LineId Id="47" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="88" Count="18" />
      <LineId Id="87" Count="0" />
      <LineId Id="108" Count="18" />
      <LineId Id="107" Count="0" />
      <LineId Id="67" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>