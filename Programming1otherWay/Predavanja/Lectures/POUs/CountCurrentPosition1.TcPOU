<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="CountCurrentPosition1" Id="{9470ef1e-6d57-4400-87bd-bf87707256a6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CountCurrentPosition1
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// COUNT ROTATION:
IF IO.Initialized AND IO.StepRotatonSwitch = 1 THEN
	IF IO.MotorRotationDirection = 0 THEN
		IF (NOT IO.Switch) AND Automatic.RCurrentlyMoving THEN
			IF IO.PreviousManualMode THEN
				Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent + 1;
			ELSE
				Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent + 1;
				Automatic.RotationPositionAuto := Automatic.RotationPositionAuto + 1;
			END_IF
		ELSIF Automatic.RCurrentlyMoving THEN
			Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent + 1;
		END_IF
	ELSE
		IF (NOT IO.Switch) AND Automatic.RCurrentlyMoving THEN
			IF IO.PreviousManualMode THEN
				Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent - 1;
			ELSE
				Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent - 1;
				Automatic.RotationPositionAuto := Automatic.RotationPositionAuto - 1;
			END_IF
		ELSIF Automatic.RCurrentlyMoving THEN
			Automatic.RotationPositionCurrent := Automatic.RotationPositionCurrent - 1;
		END_IF
	END_IF
END_IF

// COUNT Extension:
IF IO.Initialized AND IO.StepExtensionSwitch = 1 THEN
	IO.LEDGreen := 0;
	IF IO.MotorExtensionDirection = 0 THEN
		IF (NOT IO.Switch) AND Automatic.ECurrentlyMoving THEN
			IF IO.PreviousManualMode THEN
				Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent + 1;
			ELSE
				Automatic.ExtensionPositionAuto := Automatic.ExtensionPositionAuto + 1;
				Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent + 1;
			END_IF
		ELSIF Automatic.ECurrentlyMoving THEN
			Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent + 1;
		END_IF
	ELSE
		IF (NOT IO.Switch) AND Automatic.ECurrentlyMoving THEN
			IF IO.PreviousManualMode THEN
				Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent - 1;
			ELSE
				Automatic.ExtensionPositionAuto := Automatic.ExtensionPositionAuto - 1;
				Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent - 1;
			END_IF
		ELSIF Automatic.ECurrentlyMoving THEN
			Automatic.ExtensionPositionCurrent := Automatic.ExtensionPositionCurrent - 1;
		END_IF
	END_IF
END_IF

// COUNT Lifting:
IF IO.Initialized AND IO.StepLiftingSwitch = 1 THEN
	IF IO.MotorLiftingDirection = 0 THEN
		IF (NOT IO.Switch) AND Automatic.LCurrentlyMoving THEN
			IF IO.PreviousManualMode THEN
				Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent + 1;
			ELSE
				Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent + 1;
				Automatic.LiftingPositionAuto := Automatic.LiftingPositionAuto + 1;
			END_IF
		ELSIF Automatic.LCurrentlyMoving THEN
			Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent + 1;
		END_IF
	ELSE
		IF (NOT IO.Switch) AND Automatic.LCurrentlyMoving THEN
			IF IO.PreviousManualMode THEN
				Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent - 1;
			ELSE
				Automatic.LiftingPositionAuto := Automatic.LiftingPositionAuto - 1;
				Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent - 1;
			END_IF
		ELSIF Automatic.LCurrentlyMoving THEN
			Automatic.LiftingPositionCurrent := Automatic.LiftingPositionCurrent - 1;
		END_IF
	END_IF
END_IF

// COUNT Grip:
IF IO.Initialized AND IO.StepGripSwitch = 1 THEN
	IF IO.MotorGripDirection = 0 THEN
		IF (NOT IO.Switch) AND Automatic.GCurrentlyMoving THEN	// automatic mode
			IO.LEDGreen := 0;
			
			IF IO.PreviousManualMode THEN
				Automatic.GripPositionCurrent := Automatic.GripPositionCurrent + 1;
			ELSE
				Automatic.GripPositionAuto := Automatic.GripPositionAuto + 1;
				Automatic.GripPositionCurrent := Automatic.GripPositionCurrent + 1;
			END_IF
		ELSIF Automatic.GCurrentlyMoving THEN		// manual mode
			Automatic.GripPositionCurrent := Automatic.GripPositionCurrent + 1;
		END_IF
	ELSE
		IF (NOT IO.Switch) AND Automatic.GCurrentlyMoving THEN
			IO.LEDGreen := 1;
			IF IO.PreviousManualMode THEN
				Automatic.GripPositionCurrent := Automatic.GripPositionCurrent - 1;
			ELSE
				Automatic.GripPositionAuto := Automatic.GripPositionAuto - 1;
				Automatic.GripPositionCurrent := Automatic.GripPositionCurrent - 1;
			END_IF
		ELSIF Automatic.GCurrentlyMoving THEN
			Automatic.GripPositionCurrent := Automatic.GripPositionCurrent - 1;
		END_IF
	END_IF
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="CountCurrentPosition1">
      <LineId Id="10" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="187" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="133" Count="1" />
      <LineId Id="131" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="139" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="30" Count="5" />
      <LineId Id="142" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="193" Count="2" />
      <LineId Id="176" Count="0" />
      <LineId Id="145" Count="1" />
      <LineId Id="141" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="196" Count="2" />
      <LineId Id="178" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="148" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="52" Count="3" />
      <LineId Id="57" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="159" Count="1" />
      <LineId Id="155" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="202" Count="2" />
      <LineId Id="182" Count="0" />
      <LineId Id="166" Count="1" />
      <LineId Id="162" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="74" Count="3" />
      <LineId Id="98" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="205" Count="2" />
      <LineId Id="184" Count="0" />
      <LineId Id="116" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="208" Count="2" />
      <LineId Id="186" Count="0" />
      <LineId Id="123" Count="1" />
      <LineId Id="118" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>